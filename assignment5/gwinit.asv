function gwinit(k)
% Initialize Gridworld and robot
%

global GWWORLD;
global GWXSIZE;
global GWYSIZE;
global GWPOS;
global GWFEED;
global GWTERM;
global GWISVALID;
global GWROBOT;
global GWGOAL;
global GWDYN;
global GWFMAPS;
global GWTMAPS;
global GWLASTFEED;
GWLASTFEED = 0;

GWROBOT = imread('robot.jpg');
GWGOAL = imread('goal.jpg');

GWXSIZE = 10;
GWYSIZE = 15;

GWFEED = -0.1 * ones(GWXSIZE,GWYSIZE);
GWDYN = 0;

switch k
 case 1 % One goal only
  GWTERM = GWFEED * 0;
  GWTERM(4,end-2) = 1;
 case 2 % Two goals
  GWTERM = GWFEED * 0;
  GWTERM(4,end-2) = 1;
  GWTERM(3,6) = 1;
 case 3 % Fast lane
  GWXSIZE = 25;
  GWYSIZE = 30;
  GWFEED = -0.5 * ones(GWXSIZE,GWYSIZE);
  GWTERM = GWFEED * 0;
  GWTERM(5,end-2) = 1;
  GWFEED(:,7:9) = -0.01;
  GWFEED(:,20:20) = -0.01;
  GWFEED(1:3,:) = -0.01;
  GWFEED(16:18,:) = -0.01;
 case 4 % Warpspace
  GWTERM = GWFEED * 0;
  GWTERM(4,end-2) = 1;
  GWFEED(3,3) = 0.1234; % special warp space code
 case 5 % Annoying blob
  GWTERM = GWFEED * 0; 
  GWTERM(4,end-2) = 1;
  GWFEED(1:8,5:8) = -(0.1+0.1+0.1+0.2+11)/5;
 case 6 % Stochastic annoying blob
  GWTERM = GWFEED * 0;
  GWTERM(4,end) = 1;
  if rand < 0.2
    GWFEED(1:8,5:8) = -11;
  end
 case 7 % Three alternating targets
  GWXSIZE = 10;
  GWYSIZE = 10;
  GWFEED = -0.1 * ones(GWXSIZE,GWYSIZE);
  GWDYN = 1;
  GWFMAPS = repmat(GWFEED,[1 1 3]);
  GWTMAPS = repmat(GWFEED,[1 1 3]) * 0;
  GWFMAPS(2,2,1) = 10;
  GWFMAPS(2,9,2) = 10;
  GWFMAPS(9,2,3) = 10;
  GWFEED = GWFMAPS(:,:,GWDYN);
  size(GWFEED);
  GWTERM = GWTMAPS(:,:,GWDYN);
 case 7799 % Fast lane
  GWXSIZE = 10;
  GWYSIZE = 15;
  GWFEED = -0.5 * ones(GWXSIZE,GWYSIZE);
  GWTERM = GWFEED * 0;
  GWTERM(5,end-2) = 1;
  GWFEED(:,7:9) = -0.01;
  GWFEED(1:3,:) = -0.01;
 case 8 % Fast lane
  GWXSIZE = 25;
  GWYSIZE = 30;
  GWFEED = -0.5 * ones(GWXSIZE,GWYSIZE);
  GWTERM = GWFEED * 0;
  GWTERM(5,end-2) = 1;
  GWFEED(:,7:9) = -0.01;
  GWFEED(:,20:20) = -0.01;
  GWFEED(1:3,:) = -0.01;
  GWFEED(16:18,:) = -0.01;

end




while 1
  GWPOS = ceil([rand*GWXSIZE,rand*GWYSIZE])';
  if k == 3
      GWPOS(1) = 17;
      GWPOS(2) = 17;
  end  
  if GWTERM(GWPOS(1),GWPOS(2))
    continue
  end
  break;
end

GWISVALID = 1;


